/* Generated By:JavaCC: Do not edit this line. ExpressionParserConstants.java */
package LambdaCalculus.Parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ExpressionParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int PREDICATE = 1;
  /** RegularExpression Id. */
  int CONSTANT = 2;
  /** RegularExpression Id. */
  int VARIABLE = 3;
  /** RegularExpression Id. */
  int LAMBDA = 4;
  /** RegularExpression Id. */
  int CONS = 5;
  /** RegularExpression Id. */
  int PRED = 6;
  /** RegularExpression Id. */
  int APPLIED = 7;
  /** RegularExpression Id. */
  int COUNT = 8;
  /** RegularExpression Id. */
  int ASK = 9;
  /** RegularExpression Id. */
  int ARGMIN_OR_MAX = 10;
  /** RegularExpression Id. */
  int AND = 11;
  /** RegularExpression Id. */
  int L_SQ_BRACKET = 12;
  /** RegularExpression Id. */
  int R_SQ_BRACKET = 13;
  /** RegularExpression Id. */
  int L_CURL_BRACKET = 14;
  /** RegularExpression Id. */
  int R_CURL_BRACKET = 15;
  /** RegularExpression Id. */
  int LPAR = 16;
  /** RegularExpression Id. */
  int RPAR = 17;
  /** RegularExpression Id. */
  int LABEL = 22;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "<PREDICATE>",
    "<CONSTANT>",
    "<VARIABLE>",
    "\"lambda\"",
    "\"Cons-\"",
    "\"Pred-\"",
    "\"@\"",
    "\"count\"",
    "\"ask\"",
    "<ARGMIN_OR_MAX>",
    "\"and\"",
    "\"[\"",
    "\"]\"",
    "\"{\"",
    "\"}\"",
    "\"(\"",
    "\")\"",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<LABEL>",
  };

}
